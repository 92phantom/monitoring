---
# Source: argo-cd/charts/redis-ha/templates/redis-ha-announce-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-redis-ha-announce-0
  namespace: "argocd"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argocd"
    chart: redis-ha-4.22.5
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  publishNotReadyAddresses: true
  type: ClusterIP
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
  selector:
    release: argocd
    app: redis-ha
    "statefulset.kubernetes.io/pod-name": argocd-redis-ha-server-0
---
# Source: argo-cd/charts/redis-ha/templates/redis-ha-announce-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-redis-ha-announce-1
  namespace: "argocd"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argocd"
    chart: redis-ha-4.22.5
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  publishNotReadyAddresses: true
  type: ClusterIP
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
  selector:
    release: argocd
    app: redis-ha
    "statefulset.kubernetes.io/pod-name": argocd-redis-ha-server-1
---
# Source: argo-cd/charts/redis-ha/templates/redis-ha-announce-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-redis-ha-announce-2
  namespace: "argocd"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argocd"
    chart: redis-ha-4.22.5
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  publishNotReadyAddresses: true
  type: ClusterIP
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
  selector:
    release: argocd
    app: redis-ha
    "statefulset.kubernetes.io/pod-name": argocd-redis-ha-server-2
---
# Source: argo-cd/charts/redis-ha/templates/redis-ha-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-redis-ha
  namespace: "argocd"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argocd"
    chart: redis-ha-4.22.5
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
  selector:
    release: argocd
    app: redis-ha
---
# Source: argo-cd/charts/redis-ha/templates/redis-haproxy-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-redis-ha-haproxy
  namespace: "argocd"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argocd"
    chart: redis-ha-4.22.5
    component: argocd-redis-ha-haproxy
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: tcp-haproxy
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: http-exporter-port
      port: 9101
      protocol: TCP
      targetPort: metrics-port
  selector:
    release: argocd
    app: redis-ha-haproxy
---
# Source: argo-cd/templates/argocd-applicationset/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-applicationset-controller
  namespace: "argocd"
  labels:
    helm.sh/chart: argo-cd-5.29.1
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: applicationset-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
spec:
  ports:
    - name: webhook
      port: 7000
      targetPort: webhook
  selector:
    app.kubernetes.io/name: argocd-applicationset-controller
    app.kubernetes.io/instance: argocd
---
# Source: argo-cd/templates/argocd-repo-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: argo-cd-5.29.1
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
  name: argocd-repo-server
  namespace: "argocd"
spec:
  ports:
    - name: https-repo-server
      protocol: TCP
      port: 8081
      targetPort: repo-server
  selector:
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/instance: argocd
---
# Source: argo-cd/templates/argocd-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: "argocd"
  labels:
    helm.sh/chart: argo-cd-5.29.1
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30800
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8080
      nodePort: 30443
  selector:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/instance: argocd
---
# Source: argo-cd/templates/dex/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argocd-dex-server
  namespace: "argocd"
  labels:
    helm.sh/chart: argo-cd-5.29.1
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
spec:
  ports:
    - name: http
      protocol: TCP
      port: 5556
      targetPort: http
    - name: grpc
      protocol: TCP
      port: 5557
      targetPort: grpc
  selector:
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/instance: argocd
